{"version":3,"sources":["../src/HTMLProcessor.js"],"names":[],"mappings":";AACA;;;;;;;;AACA;;;;IACqB,a;AACjB,2BAAY,MAAZ,EAAoB;AAAA;;AAChB,aAAK,MAAL,GAAc,MAAd;AACA,aAAK,UAAL,GAAkB,KAAK,MAAL,CAAY,UAAZ,GAAyB,KAAK,MAAL,CAAY,UAArC,GAAkD,EAApE;AACH;;;;8CAEqB;AAClB,mBAAO,CACH,MADG,EAEH,OAFG,EAGL,MAHK,CAGE,KAAK,UAHP,CAAP;AAIH;;;kCAES,G,EAAK;AACX,mBAAO;AACH,0BADG,sBACQ,IADR,EACc,QADd,EACwB;AACvB,2BAAO,sBAAM,IAAN,CAAP;AACH,iBAHE;AAIH,2BAJG,uBAIS,QAJT,EAImB,QAJnB,EAI6B;AAC5B,2BAAO;AACH,0CADG;AAEH,kCAAU,WAAW,QAAX,GAAsB;AAF7B,qBAAP;AAIH;AATE,aAAP;AAWH;;;;;;kBAzBgB,a","file":"HTMLProcessor.js","sourcesContent":["// LICENSE : MIT\n\"use strict\";\nimport {parse} from \"./html-to-ast\";\nexport default class HTMLProcessor {\n    constructor(config) {\n        this.config = config;\n        this.extensions = this.config.extensions ? this.config.extensions : [];\n    }\n\n    availableExtensions() {\n        return [\n            \".htm\",\n            \".html\"\n        ].concat(this.extensions);\n    }\n\n    processor(ext) {\n        return {\n            preProcess(text, filePath) {\n                return parse(text);\n            },\n            postProcess(messages, filePath) {\n                return {\n                    messages,\n                    filePath: filePath ? filePath : \"<html>\"\n                };\n            }\n        };\n    }\n}\n"]}